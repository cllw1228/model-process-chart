name:"Mental and body pain"

input: "data"
input_shape {
dim: 32
dim: 3
dim: 240
dim: 240
}

layer {
name: "conv1"
type: "Convolution"
bottom: "data"
top: "conv1"
convolution_param {
num_output: 64
kernel_size: 3
}
}
layers {
name: "relu1"
type: RELU
bottom: "conv1"
top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: 2
    kernel_size: 3
    
  }
} 

layer {
name: "conv2"
type: "Convolution"
bottom: "pool1"
top: "conv2"
convolution_param {
num_output: 64
kernel_size: 3
}
}

layers {
name: "relu2"
type: RELU
bottom: "conv2"
top: "conv2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: 2
    kernel_size: 3
    
  }
}

layer {
name: "conv3"
type: "Convolution"
bottom: "pool2"
top: "conv3"
convolution_param {
num_output: 64
kernel_size: 3
}
}

layers {
name: "relu3"
type: RELU
bottom: "conv3"
top: "conv3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: 2
    kernel_size: 3
    
  }
}

layer {
  name: "flatten"
  type: "Flatten"
  bottom: "pool3" 
  top: "flatten"
  flatten_param {
    axis: 1
  }
}


layer {
  name: "dence1"
  type: "InnerProduct"
  # learning rate and decay multipliers for the weights
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "relu"
      std: 0.01
    }
    bias_filler {
      type: "relu"
      value: 0
    }
  }
  bottom: "flatten"
  top: "dence1"
}

layer {
  name: "dence2"
  type: "InnerProduct"
  # learning rate and decay multipliers for the weights
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "relu"
      std: 0.01
    }
    bias_filler {
      type: "relu"
      value: 0
    }
  }
  bottom: "dence1"
  top: "dence2"
}

layer {
  name: "dence3"
  type: "InnerProduct"
  # learning rate and decay multipliers for the weights
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 32
    weight_filler {
      type: "relu"
      std: 0.01
    }
    bias_filler {
      type: "relu"
      value: 0
    }
  }
  bottom: "dence2"
  top: "dence3"
}


layer {
  name: "drop"
  type: "Dropout"
  bottom: "dence3"
  top: "drop"
  dropout_param {
    dropout_ratio: 0.5
  }
}


layer {
  name: "dence4"
  type: "InnerProduct"
  # learning rate and decay multipliers for the weights
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "sigmoid"
      std: 0.01
    }
    bias_filler {
      type: "sigmoid"
      value: 0
    }
  }
  bottom: "drop"
  top: "dence4"
}









